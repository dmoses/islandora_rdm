<?php

/**
 * @file
 * Contains islandora_rdm_datacite.module.
 */

use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Routing\RouteMatchInterface;
/**
 * Implements hook_help().
 */
function islandora_rdm_datacite_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the islandora_rdm_datacite module.
    case 'help.page.islandora_rdm_datacite':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('DataCite API and services for producing DataCite data formats.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implementation of hook_node_update().
 * Push state change up to Datacite DOI API.
 * @TODO: Replace this code if this is committed to core: https://www.drupal.org/project/drupal/issues/2873287
 *
 * @param \Drupal\Core\Entity\EntityInterface $entity
 */
function islandora_rdm_datacite_node_update(EntityInterface $entity) {

  if ($entity->bundle() !== 'islandora_rdm_dataset') {
    return;
  }
  $current_entity_lang=$entity->get('langcode')->value;
  $translated_entity = $entity->getTranslation($current_entity_lang);
  $new_moderation_state = $translated_entity->get('moderation_state')->first()->getValue()['value'];

  $original_entity =  $entity->original;
  $original_entity_lang=$original_entity->get('langcode')->value;
  $original_translated_entity = $original_entity->getTranslation($original_entity_lang);

  $original_moderation_state = $original_translated_entity->get('moderation_state')->first()->getValue()['value'];

  //Get the original Moderation state;
  // This doubles as a string representation of the state change.
  $workflow_transition = rtrim($original_moderation_state . '-->'. $new_moderation_state);

  switch ($workflow_transition) {
    case 'published-->archived':
    case 'draft-->archived':
      // 'Delete' DOI
      break;
    case 'draft-->published':
    case 'archived-->published':
      // Make DOI active
      break;
  }
}